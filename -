<?php

namespace App\Http\Controllers\ApiControllers;

use App\Http\Controllers\Controller;
use App\Models\DataProduk;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Collection;
use Illuminate\Support\Facades\Validator;

class DataProdukController extends Controller
{
    public $dataProduk;

    public function __construct()
    {
        $this->dataProduk = new DataProduk;
    }

    public function getAllCategories(): Collection
    {
        return $this->dataProduk->getAllCategories();
    }

    public function getProductsOnUmkm(int $id): JsonResponse
    {
        $produk = $this->dataProduk->query()
            ->where('umkm_id', '=', $id)
            ->latest()
            ->get();

        if (count($produk->toArray()) == 0) {
            return response()->json([
                'success' => 'false',
                'message' => 'Toko tidak ditemukan.'
            ], 404);
        }

        return response()->json([
            'success' => 'true',
            'message' => $produk
        ], 200);
    }

    public function createProduct(Request $request): JsonResponse
    {
        $validator = Validator::make($request->all(), [
            'umkm_id' => 'required',
            'nama_produk' => 'required|max:255',
            'deskripsi_produk' => 'required|max:3000',
            'kategori' => 'required',
            'harga' => 'required|max:100',
            'stok' => 'required|max:300',
        ]);

        if ($validator->fails()) {
            return response()->json([
                'success' => 'false',
                'message' => $validator->errors(),
            ], 409);
        }

        $userInput = $request->all();
        $produk = $this->dataProduk::create($userInput);

        return response()->json([
            'success' => 'true',
            'message' => 'Berhasil registrasi',
            'data' => $produk,
        ], 201);
    }

    public function updateProduct(Request $request, int $id): JsonResponse
    {
        $produk = $this->dataProduk::find($id);

        if ($produk === null) {
            return response()->json([
                'success' => 'false',
                'message' => 'Produk tidak ditemukan.'
            ], 404);
        }

        // Cek input user
        $validator = Validator::make($request->all(), [
            'nama_produk' => 'max:255',
            'deskripsi_produk' => 'max:3000',
            'harga' => 'max:100',
            'stok' => 'max:300',
        ]);

        if ($request->has('nama_produk')) {
            $produk->nama_lengkap = $request->nama_lengkap;
        }

        if ($request->has('deskripsi_produk')) {
            $produk->deskripsi_produk = $request->deskripsi_produk;
        }

        if ($request->has('kategori')) {
            $produk->kategori = $request->deskripsi_produk;
        }

        if ($request->has('harga')) {
            $produk->deskripsi_produk = $request->deskripsi_produk;
        }

        if ($request->has('stok')) {
            $produk->stok = $request->deskripsi_produk;
        }
    }
}
